
import React from 'react';
import { useState } from 'react';
import { useQuery } from '@tanstack/react-query';
import { supabase } from '@/integrations/supabase/client';
import { 
  Card, 
  CardContent, 
  CardFooter, 
  CardHeader, 
  CardTitle,
  CardDescription
} from '@/components/ui/card';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Button } from '@/components/ui/button';
import { 
  Table, 
  TableBody, 
  TableCell, 
  TableHead, 
  TableHeader, 
  TableRow 
} from '@/components/ui/table';
import AIProjectsList from '../ai-management/AIProjectsList';

interface AIFile {
  id: string;
  filename: string;
  type: string;
  project_id: string | null;
  created_at: string;
  storage_path: string;
  prompt?: string;
  provider?: string;
}

const AdminAIManagement = () => {
  const [activeTab, setActiveTab] = useState('projects');
  
  const { data: files, isLoading: filesLoading } = useQuery({
    queryKey: ['admin-ai-files'],
    enabled: activeTab === 'files',
    queryFn: async () => {
      const { data, error } = await supabase
        .from('ai_generated_files')
        .select('*')
        .order('created_at', { ascending: false });
      
      if (error) throw error;
      return data as AIFile[];
    }
  });
  
  const { data: providerStats, isLoading: statsLoading } = useQuery({
    queryKey: ['ai-provider-stats'],
    enabled: activeTab === 'stats',
    queryFn: async () => {
      // In a real implementation, this would be aggregated through an edge function
      // For now, we'll return mock data
      return [
        { provider: 'OpenAI', fileCount: 24, averageDuration: '1.2s', costEstimate: '$5.76' },
        { provider: 'Anthropic', fileCount: 16, averageDuration: '1.5s', costEstimate: '$4.32' },
        { provider: 'Google', fileCount: 8, averageDuration: '0.9s', costEstimate: '$2.16' },
        { provider: 'Stability AI', fileCount: 15, averageDuration: '2.1s', costEstimate: '$3.75' },
      ];
    }
  });
  
  return (
    <div>
      <Tabs defaultValue="projects" value={activeTab} onValueChange={setActiveTab}>
        <TabsList className="mb-6">
          <TabsTrigger value="projects">AI Projects</TabsTrigger>
          <TabsTrigger value="files">Generated Files</TabsTrigger>
          <TabsTrigger value="stats">Provider Stats</TabsTrigger>
        </TabsList>
        
        <TabsContent value="projects">
          <AIProjectsList />
        </TabsContent>
        
        <TabsContent value="files">
          <Card>
            <CardHeader>
              <CardTitle>AI Generated Files</CardTitle>
              <CardDescription>
                View all files generated by AI systems across projects
              </CardDescription>
            </CardHeader>
            <CardContent>
              {filesLoading ? (
                <div className="flex justify-center py-8">
                  <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900"></div>
                </div>
              ) : files && files.length > 0 ? (
                <div className="rounded-md border overflow-hidden">
                  <Table>
                    <TableHeader>
                      <TableRow>
                        <TableHead>Filename</TableHead>
                        <TableHead>Type</TableHead>
                        <TableHead>Provider</TableHead>
                        <TableHead>Project ID</TableHead>
                        <TableHead>Created</TableHead>
                        <TableHead className="text-right">Actions</TableHead>
                      </TableRow>
                    </TableHeader>
                    <TableBody>
                      {files.map((file) => (
                        <TableRow key={file.id}>
                          <TableCell className="font-medium">{file.filename}</TableCell>
                          <TableCell>
                            <span className="px-2 py-1 rounded-full text-xs bg-gray-100">
                              {file.type}
                            </span>
                          </TableCell>
                          <TableCell>{file.provider || '-'}</TableCell>
                          <TableCell>
                            {file.project_id ? file.project_id.substring(0, 8) + '...' : '-'}
                          </TableCell>
                          <TableCell>{new Date(file.created_at).toLocaleDateString()}</TableCell>
                          <TableCell className="text-right">
                            <Button variant="outline" size="sm">View</Button>
                          </TableCell>
                        </TableRow>
                      ))}
                    </TableBody>
                  </Table>
                </div>
              ) : (
                <div className="text-center py-8 text-muted-foreground">
                  No AI generated files found
                </div>
              )}
            </CardContent>
          </Card>
        </TabsContent>
        
        <TabsContent value="stats">
          <Card>
            <CardHeader>
              <CardTitle>AI Provider Statistics</CardTitle>
              <CardDescription>
                Usage metrics and costs by AI provider
              </CardDescription>
            </CardHeader>
            <CardContent>
              {statsLoading ? (
                <div className="flex justify-center py-8">
                  <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900"></div>
                </div>
              ) : (
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  {providerStats?.map((stat, index) => (
                    <Card key={index}>
                      <CardHeader className="pb-2">
                        <CardTitle className="text-base">{stat.provider}</CardTitle>
                      </CardHeader>
                      <CardContent className="pb-2">
                        <div className="grid grid-cols-2 gap-2">
                          <div>
                            <p className="text-sm text-muted-foreground">Files Generated</p>
                            <p className="text-xl font-bold">{stat.fileCount}</p>
                          </div>
                          <div>
                            <p className="text-sm text-muted-foreground">Avg. Duration</p>
                            <p className="text-xl font-bold">{stat.averageDuration}</p>
                          </div>
                        </div>
                      </CardContent>
                      <CardFooter>
                        <div className="w-full">
                          <p className="text-sm text-muted-foreground">Estimated Cost</p>
                          <p className="text-lg font-semibold">{stat.costEstimate}</p>
                        </div>
                      </CardFooter>
                    </Card>
                  ))}
                </div>
              )}
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
};

export default AdminAIManagement;
